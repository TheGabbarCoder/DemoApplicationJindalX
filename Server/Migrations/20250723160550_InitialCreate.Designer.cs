// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723160550_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.AgeingBucket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgeingBuckets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "0-30 Days"
                        },
                        new
                        {
                            Id = 2,
                            Name = "31-60 Days"
                        });
                });

            modelBuilder.Entity("Server.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Location 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Location 2"
                        });
                });

            modelBuilder.Entity("Server.Models.Payers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Payer A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Payer B"
                        });
                });

            modelBuilder.Entity("Server.Models.PrioritySetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeingBucketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("PayerId")
                        .HasColumnType("int");

                    b.Property<int>("PriorityTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AgeingBucketId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PayerId");

                    b.HasIndex("PriorityTypeId");

                    b.ToTable("PrioritySetups");
                });

            modelBuilder.Entity("Server.Models.PriorityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PriorityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "High"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Low"
                        });
                });

            modelBuilder.Entity("Server.Models.PrioritySetup", b =>
                {
                    b.HasOne("Server.Models.AgeingBucket", "AgeingBucket")
                        .WithMany("PrioritySetups")
                        .HasForeignKey("AgeingBucketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Location", "Location")
                        .WithMany("PrioritySetups")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Payers", "Payer")
                        .WithMany("PrioritySetups")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.PriorityType", "PriorityType")
                        .WithMany("PrioritySetups")
                        .HasForeignKey("PriorityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeingBucket");

                    b.Navigation("Location");

                    b.Navigation("Payer");

                    b.Navigation("PriorityType");
                });

            modelBuilder.Entity("Server.Models.AgeingBucket", b =>
                {
                    b.Navigation("PrioritySetups");
                });

            modelBuilder.Entity("Server.Models.Location", b =>
                {
                    b.Navigation("PrioritySetups");
                });

            modelBuilder.Entity("Server.Models.Payers", b =>
                {
                    b.Navigation("PrioritySetups");
                });

            modelBuilder.Entity("Server.Models.PriorityType", b =>
                {
                    b.Navigation("PrioritySetups");
                });
#pragma warning restore 612, 618
        }
    }
}
